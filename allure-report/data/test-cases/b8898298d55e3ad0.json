{"uid":"b8898298d55e3ad0","name":"test_logout_functionality","fullName":"saucedemo_automation.tests.test_inventory#test_logout_functionality","historyId":"094ae5d2570b94ff5f95c624cc40d5e0","time":{"start":1751128238940,"stop":1751128249883,"duration":10943},"description":"Test logout option and assert return to login page","descriptionHtml":"<p>Test logout option and assert return to login page</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"83cff237de7c72e144b85d37a094f6a4\")>\n\n    @allure.description(\"Test logout option and assert return to login page\")\n    @allure.severity(\"Major\")\n    @allure.feature(\"Menu\")\n    @allure.story(\"User logout\")\n    @allure.tag(\"logout\")\n    @pytest.mark.logout\n    def test_logout_functionality(setup):\n        driver=setup\n        login_page=LoginPage(driver)\n        inventory_page=InventoryPage(driver)\n        #user login\n        login_page.login(\"standard_user\", \"secret_sauce\")\n        #click on menu btn\n        inventory_page.open_menu()\n>       inventory_page.clicklogout()\n\nsaucedemo_automation\\tests\\test_inventory.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsaucedemo_automation\\pages\\inventory_page.py:75: in clicklogout\n    self.click(self.LOGOUT_BTN)\nsaucedemo_automation\\pages\\base_page.py:12: in click\n    element = WebDriverWait(self.driver,self.timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"83cff237de7c72e144b85d37a094f6a4\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000213A8AB1760>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":true,"beforeStages":[{"name":"setup","time":{"start":1751128234706,"stop":1751128238939,"duration":4233},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1751128250119,"stop":1751128252446,"duration":2327},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"logout"},{"name":"severity","value":"Major"},{"name":"story","value":"User logout"},{"name":"feature","value":"Menu"},{"name":"tag","value":"logout"},{"name":"parentSuite","value":"saucedemo_automation.tests"},{"name":"suite","value":"test_inventory"},{"name":"host","value":"VishwaNarayanan"},{"name":"thread","value":"17732-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"saucedemo_automation.tests.test_inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b658ae24c872338","status":"passed","time":{"start":1751127668991,"stop":1751127670232,"duration":1241}},{"uid":"1b1e82c3d2cffc2e","status":"passed","time":{"start":1751127247835,"stop":1751127249059,"duration":1224}},{"uid":"e86beae3e568af72","status":"passed","time":{"start":1751126437306,"stop":1751126438378,"duration":1072}},{"uid":"19d878c79e07d825","status":"passed","time":{"start":1751126193271,"stop":1751126194239,"duration":968}},{"uid":"c136eebb50157795","status":"passed","time":{"start":1751103153330,"stop":1751103154557,"duration":1227}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["logout"]},"source":"b8898298d55e3ad0.json","parameterValues":[]}